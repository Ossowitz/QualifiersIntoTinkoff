Index: Leetcode/src/main/java/Lesson2/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Leetcode/src/main/java/Lesson2/Solution.java b/Leetcode/src/main/java/Lesson2/Solution.java
new file mode 100644
--- /dev/null	(date 1689195758293)
+++ b/Leetcode/src/main/java/Lesson2/Solution.java	(date 1689195758293)
@@ -0,0 +1,20 @@
+package Lesson2;
+
+public class Solution {
+    public static boolean isPalindrome(int x) {
+        if (x < 0) {
+            return false;
+        }
+
+        int reversedNumber = 0;
+        int originNumber = x;
+
+        while (x != 0) {
+            int digit = x % 10;
+            reversedNumber = reversedNumber * 10 + digit;
+            x /= 10;
+        }
+
+        return originNumber == reversedNumber;
+    }
+}
Index: Leetcode/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>org.example</groupId>\r\n  <artifactId>Leetcode</artifactId>\r\n  <packaging>war</packaging>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <name>Leetcode Maven Webapp</name>\r\n  <url>http://maven.apache.org</url>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>3.8.1</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  <build>\r\n    <finalName>Leetcode</finalName>\r\n  </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Leetcode/pom.xml b/Leetcode/pom.xml
--- a/Leetcode/pom.xml	(revision 3c66c7ef9b27088907c81603d8d917cd03096575)
+++ b/Leetcode/pom.xml	(date 1688816819297)
@@ -1,21 +1,85 @@
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
-  <groupId>org.example</groupId>
+
+  <groupId>com.example.maven</groupId>
   <artifactId>Leetcode</artifactId>
-  <packaging>war</packaging>
   <version>1.0-SNAPSHOT</version>
-  <name>Leetcode Maven Webapp</name>
-  <url>http://maven.apache.org</url>
+
+  <properties>
+    <maven.compiler.source>19</maven.compiler.source>
+    <maven.compiler.target>19</maven.compiler.target>
+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    <spring.version>5.3.27</spring.version>
+    <assertj.version>3.24.2</assertj.version>
+  </properties>
+
   <dependencies>
     <dependency>
+      <groupId>org.junit.jupiter</groupId>
+      <artifactId>junit-jupiter-api</artifactId>
+      <version>5.9.3</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.junit.jupiter</groupId>
+      <artifactId>junit-jupiter-engine</artifactId>
+      <version>5.9.3</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.junit.jupiter</groupId>
+      <artifactId>junit-jupiter</artifactId>
+      <version>5.9.3</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.assertj</groupId>
+      <artifactId>assertj-core</artifactId>
+      <version>3.24.2</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.hamcrest</groupId>
+      <artifactId>hamcrest-all</artifactId>
+      <version>1.3</version>
+    </dependency>
+    <dependency>
+      <groupId>org.hamcrest</groupId>
+      <artifactId>hamcrest</artifactId>
+      <version>2.2</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.hamcrest</groupId>
+      <artifactId>hamcrest-core</artifactId>
+      <version>2.2</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.hamcrest</groupId>
+      <artifactId>hamcrest-library</artifactId>
+      <version>2.2</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.junit.platform</groupId>
+      <artifactId>junit-platform-launcher</artifactId>
+      <version>1.10.0-M1</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.junit.platform</groupId>
+      <artifactId>junit-platform-commons</artifactId>
+      <version>1.10.0-M1</version>
+    </dependency>
+    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
-      <version>3.8.1</version>
-      <scope>test</scope>
+      <version>4.13.1</version>
+      <scope>compile</scope>
     </dependency>
   </dependencies>
-  <build>
-    <finalName>Leetcode</finalName>
-  </build>
-</project>
+</project>
\ No newline at end of file
Index: Leetcode/src/main/test/Lesson2/SolutionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Leetcode/src/main/test/Lesson2/SolutionTest.java b/Leetcode/src/main/test/Lesson2/SolutionTest.java
new file mode 100644
--- /dev/null	(date 1689196287397)
+++ b/Leetcode/src/main/test/Lesson2/SolutionTest.java	(date 1689196287397)
@@ -0,0 +1,37 @@
+package Lesson2;
+
+import org.junit.Test;
+import org.junit.jupiter.api.Assertions;
+
+public class SolutionTest {
+
+    @Test
+    public void testIsPalindrome() {
+        int number = 121;
+        boolean expected = true;
+
+        boolean actual = Solution.isPalindrome(number);
+
+        Assertions.assertEquals(expected, actual);
+    }
+
+    @Test
+    public void testIsPalindromeNegativeNumber() {
+        int number = -121;
+        boolean expected = false;
+
+        boolean actual = Solution.isPalindrome(number);
+
+        Assertions.assertEquals(expected, actual);
+    }
+
+    @Test
+    public void testIsPalindromeNotPalindromeNumber() {
+        int number = 10;
+        boolean expected = false;
+
+        boolean actual = Solution.isPalindrome(number);
+
+        Assertions.assertEquals(expected, actual);
+    }
+}
Index: Leetcode/src/main/java/Lesson1/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Leetcode/src/main/java/Lesson1/Solution.java b/Leetcode/src/main/java/Lesson1/Solution.java
new file mode 100644
--- /dev/null	(date 1689196437501)
+++ b/Leetcode/src/main/java/Lesson1/Solution.java	(date 1689196437501)
@@ -0,0 +1,24 @@
+package Lesson1;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public class Solution {
+    public static int[] twoSum(int[] nums, int target) {
+        // Create a Map to keep integers and their indices
+        Map<Integer, Integer> map = new HashMap<>();
+
+        // Key = integer, Value = index
+        for (int i = 0; i < nums.length; i++) {
+            map.put(nums[i], i);
+        }
+
+        for (int i = 0; i < nums.length; i++) {
+            int complement = target - nums[i];
+            if (map.containsKey(complement) && map.get(complement) != i) {
+                return new int[]{i, map.get(complement)};
+            }
+        }
+        return null;
+    }
+}
